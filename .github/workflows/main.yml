name: PullRequest Pipeline

on:
  pull_request:
    paths:
      - 'moduleA/**'
      - 'moduleB/**'

jobs:
  verification:
    runs-on: ubuntu-latest
    env:
      ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Detect changed modules
        id: detect-modules
        run: |
          # PR의 base 브랜치와 비교할 기준 커밋 찾기
          git fetch --prune --unshallow
          BASE_COMMIT=$(git merge-base origin/${{ github.event.pull_request.base.ref }} HEAD)
          
          # 변경된 파일 감지
          CHANGED_FILES=$(git diff --name-only $BASE_COMMIT)
          echo "Changed files: $CHANGED_FILES"

          # 변경된 모듈에 따라 테스트 대상 설정
          MODULE_PATHS=""
          if echo "$CHANGED_FILES" | grep -q '^moduleA/'; then
            MODULE_PATHS="${MODULE_PATHS} moduleA"
          fi
          if echo "$CHANGED_FILES" | grep -q '^moduleB/'; then
            MODULE_PATHS="${MODULE_PATHS} moduleB"
          fi

          # 모듈 경로 출력 및 GitHub Actions output 설정
          MODULE_PATHS=$(echo $MODULE_PATHS | xargs)
          echo "Modules to test: $MODULE_PATHS"
          echo "module_paths=$MODULE_PATHS" >> $GITHUB_ENV

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Build with Gradle
        run: |
          if [ -n "$module_paths" ]; then
            for MODULE in $module_paths; do
              echo "Running tests for $MODULE"
              ./gradlew -p $MODULE test --stacktrace
            done
          else
            echo "No modules to test."
          fi
        env:
          GRADLE_USER_HOME: ./.gradle-home
